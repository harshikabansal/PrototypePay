import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'package:encrypt/encrypt.dart';

class SecureStorage {
  static final _storage = FlutterSecureStorage();
  static final _encrypter = Encrypter(AES(Key.fromLength(32)));

  static Future<void> write(String key, String value) async {
    final encrypted = _encrypter.encrypt(value);
    await _storage.write(key: key, value: encrypted.base64);
  }

  static Future<String?> read(String key) async {
    final encryptedValue = await _storage.read(key: key);
    if (encryptedValue == null) return null;
    return _encrypter.decrypt64(encryptedValue);
  }

  static Future<void> delete(String key) async {
    await _storage.delete(key: key);
  }
}
