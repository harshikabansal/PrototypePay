import 'package:flutter/material.dart';

class PinPad extends StatefulWidget {
  final int pinLength;
  final void Function(String) onCompleted;

  const PinPad({
    super.key,
    this.pinLength = 4,
    required this.onCompleted,
  });

  @override
  State<PinPad> createState() => _PinPadState();
}

class _PinPadState extends State<PinPad> {
  String _enteredPin = '';

  void _onKeyPressed(String value) {
    setState(() {
      if (value == 'C') {
        if (_enteredPin.isNotEmpty) {
          _enteredPin = _enteredPin.substring(0, _enteredPin.length - 1);
        }
      } else if (_enteredPin.length < widget.pinLength) {
        _enteredPin += value;
        if (_enteredPin.length == widget.pinLength) {
          widget.onCompleted(_enteredPin);
        }
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      children: [
        // PIN indicators
        Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: List.generate(
            widget.pinLength,
            (index) => Container(
              margin: const EdgeInsets.all(8),
              width: 18,
              height: 18,
              decoration: BoxDecoration(
                shape: BoxShape.circle,
                color: index < _enteredPin.length
                    ? Theme.of(context).primaryColor
                    : Colors.grey[300],
              ),
            ),
          ),
        ),
        const SizedBox(height: 16),
        // Numeric keypad
        GridView.count(
          shrinkWrap: true,
          crossAxisCount: 3,
          childAspectRatio: 1.5,
          children: [
            ...List.generate(9, (index) {
              final digit = '${index + 1}';
              return _buildKeyButton(digit);
            }),
            _buildKeyButton(''), // Empty cell
            _buildKeyButton('0'),
            _buildKeyButton('C', icon: Icons.backspace),
          ],
        ),
      ],
    );
  }

  Widget _buildKeyButton(String text, {IconData? icon}) {
    return Padding(
      padding: const EdgeInsets.all(4),
      child: Material(
        color: Colors.grey[100],
        borderRadius: BorderRadius.circular(8),
        child: InkWell(
          borderRadius: BorderRadius.circular(8),
          onTap: text.isNotEmpty ? () => _onKeyPressed(text) : null,
          child: Center(
            child: icon != null
                ? Icon(icon)
                : Text(
                    text,
                    style: const TextStyle(fontSize: 24),
                  ),
          ),
        ),
      ),
    );
  }
}
